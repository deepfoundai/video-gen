name: "Enqueue Agent Tasks to EventBridge"

on:
  issues:
    types: [opened, edited]

jobs:
  enqueue:
    if: contains(github.event.issue.labels.*.name, 'Work')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Parse issue body and send to EventBridge
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          # Parse the issue body to extract form data from GitHub issue template
          # GitHub issue templates create specific patterns we can parse
          
          # Extract agent from table format: | **agent** | DevOpsAutomation |
          AGENT=$(echo "$ISSUE_BODY" | grep "agent.*|" | awk -F'|' '{print $3}' | xargs || echo "")
          
          # Extract full issue body as spec (don't truncate)
          SPEC=$(printf "%s" "$ISSUE_BODY" | base64 -w0)
          
          # Extract deadline from table format: | **deadline (UTC)** | 2025-06-28T00:00 |
          DEADLINE=$(echo "$ISSUE_BODY" | grep "deadline.*|" | awk -F'|' '{print $3}' | xargs || echo "none")
          
          # Extract dependencies (everything after "Dependencies" section)
          DEPS=$(echo "$ISSUE_BODY" | sed -n '/Dependencies/,$p' | sed '1d' | grep -v "^$" | base64 -w0 || echo "")
          
          # Debug output
          echo "Parsed values:"
          echo "  AGENT: '$AGENT'"
          echo "  DEADLINE: '$DEADLINE'"
          echo "  SPEC length: $(echo "$SPEC" | wc -c)"
          echo "  DEPS length: $(echo "$DEPS" | wc -c)"
          
          # Validation - ensure we have required fields
          if [ -z "$AGENT" ]; then
            echo "❌ Error: Could not parse agent from issue body"
            exit 1
          fi
          
          if [ -z "$SPEC" ]; then
            echo "❌ Error: Could not parse work specification from issue body"
            exit 1
          fi
          
          # Default deadline if none provided
          if [ -z "$DEADLINE" ] || [ "$DEADLINE" = "none" ]; then
            DEADLINE="none"
          fi
          
          # Escape issue title for JSON
          ESCAPED_TITLE=$(echo "$ISSUE_TITLE" | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          
          # Validate required fields for machine processing
          echo "Validating event structure..."
          if [ -z "$AGENT" ]; then
            echo "❌ Error: Missing agent field"
            exit 1
          fi
          
          if [ -z "$SPEC" ]; then
            echo "❌ Error: Missing work specification"
            exit 1
          fi
          
          if [ -z "$ISSUE_NUMBER" ]; then
            echo "❌ Error: Missing issue number"
            exit 1
          fi
          
          echo "✅ Event validation passed"
          
          # Create EventBridge event  
          cat > event.json << EOF
          {
            "Entries": [
              {
                "Source": "agent.github",
                "DetailType": "devops.request",
                "Detail": {
                  "requestId": "issue-$ISSUE_NUMBER",
                  "action": "agentWork",
                  "stage": "prod",
                  "requestedBy": "GitHubCI",
                  "agent": "$AGENT",
                  "payload": {
                    "spec": "$SPEC",
                    "deadline": "$DEADLINE", 
                    "deps": "$DEPS",
                    "issueNumber": "$ISSUE_NUMBER",
                    "issueTitle": "$ESCAPED_TITLE",
                    "issueUrl": "$ISSUE_URL"
                  }
                }
              }
            ]
          }
          EOF
          
          # Send to EventBridge
          aws events put-events --cli-input-json file://event.json
          
          echo "✅ Sent agent task to EventBridge:"
          echo "  Agent: $AGENT"
          echo "  Issue: #$ISSUE_NUMBER"
          echo "  Title: $ISSUE_TITLE" 